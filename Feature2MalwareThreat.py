### FEATURE 2 - IMPORTING LIBRARIES
import pandas as pd
import plotly.express as px
import dash
from dash import html, dcc

### FEATURE 2 - LOAD IN MALWARE DATASET
MalDataSet = pd.read_csv("Dataset 3__Malware_Threat_Alerts.csv")

### FEATURE 2 - SUBFEATURE 1 - TRACKING THREATS
ActiveThreat = MalDataSet[
    (MalDataSet['remediation_status'] == 'Pending') |
    (MalDataSet['remediation_status'] == 'Escalated')]



### FEATURE 2 - SUBFEATURE 1 - COUNT OF THREAT TYPE + STATUS
GroupData = ActiveThreat.groupby(['threat_type', 'remediation_status'])
GroupSize = GroupData.size()
Group = GroupSize.reset_index(name='count')


### FEATURE 2 - SUBFEATURE 2 - COUNT OF THREAT TYPE + SEVERITY
PatternGroupData = MalDataSet.groupby(['threat_type','severity'])
PatternGroupSize = PatternGroupData.size()
PatternGroup = PatternGroupSize.reset_index(name='count')


### FEATURE 2 - SUBFEATURE 1 - BAR CHART
BarChar = px.bar(
    Group,
    x='threat_type',
    y='count',
    color='remediation_status',
    title='Active Threats: Pending & Escalated'
)

### FEATURE 2 - SUBFEATURE 2 - BAR CHART
PatternChart = px.bar(
    PatternGroup,
    x='threat_type',
    y='count',
    color='severity',
    title='Threat Pattern by Type & Severity'

)

### FEATURE 2 - SUBFEATURE 1 & 2 - MAKE APP, SHOW GRAPH
app=dash.Dash(__name__)
app.layout=html.Div([
    html.H1('Active Malware Alerts'),
    dcc.Graph(figure=BarChar),
    html.H1('Threat Pattern Analysis'),
    dcc.Graph(figure=PatternChart)
])


### Run APP
if __name__=='__main__':
    app.run(debug=True)

    